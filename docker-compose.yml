version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: url_gami_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: url_gami_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d url_gami_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - url_gami_network

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: url_gami_app
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - PORT=3010
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_PORT=5432
      - HOST=postgres
      - DATABASE=url_gami_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - url_gami_network
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  url_gami_network:
    driver: bridge