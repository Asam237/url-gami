version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: asam
      POSTGRES_PASSWORD: asam
      POSTGRES_DB: url_gami_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U asam"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: url_gami_pgadmin
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3010:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://asam:asam@postgres:5432/url_gami_db
      NODE_ENV: development
    command: npm run dev

volumes:
  postgres-data:
